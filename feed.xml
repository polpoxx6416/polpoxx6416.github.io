<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.0">Jekyll</generator><link href="https://polpoxx6416.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://polpoxx6416.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-28T16:40:49+00:00</updated><id>https://polpoxx6416.github.io/feed.xml</id><title type="html">blank</title><subtitle></subtitle><entry><title type="html">Understanding Deep Learning</title><link href="https://polpoxx6416.github.io/blog/2025/understand-deep-learning/" rel="alternate" type="text/html" title="Understanding Deep Learning"/><published>2025-01-28T00:00:00+00:00</published><updated>2025-01-28T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/understand-deep-learning</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/understand-deep-learning/"><![CDATA[<p><a href="/assets/pdf/assets/pdf/UnderstandingDeepLearning_11_21_24_C.pdf">Here</a> you can find a great book about Deep Learning and in the <a href="/_pages/repositories.md">repositories section</a> you can find some tutorials associated with this book.</p>]]></content><author><name></name></author><category term="ml"/><summary type="html"><![CDATA[Book of Simon J. D. Prince about deep learning]]></summary></entry><entry><title type="html">Deepseek dimmensionning to run locally</title><link href="https://polpoxx6416.github.io/blog/2025/deepseek/" rel="alternate" type="text/html" title="Deepseek dimmensionning to run locally"/><published>2025-01-24T00:00:00+00:00</published><updated>2025-01-24T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/deepseek</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/deepseek/"><![CDATA[<h1 id="running-deepseek-locally">Running Deepseek locally</h1> <p><a href="https://apxml.com/posts/gpu-requirements-deepseek-r1">Here</a> you can find a tuto about dimensionning resources to run deepseek locally.</p>]]></content><author><name></name></author><category term="ml"/><summary type="html"><![CDATA[A quick guide about dimmensionning resources to run deepseek locally]]></summary></entry><entry><title type="html">Troobleshooting Wifi on Linux</title><link href="https://polpoxx6416.github.io/blog/2025/troubleshooting/" rel="alternate" type="text/html" title="Troobleshooting Wifi on Linux"/><published>2025-01-24T00:00:00+00:00</published><updated>2025-01-24T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/troubleshooting</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/troubleshooting/"><![CDATA[<h1 id="troobleshooting-wifi-on-linux">Troobleshooting Wifi on Linux</h1> <p>My system is a dual boot btw Debian and my network manager is NetworkManager.</p> <p>Here is a listof command I ran to understand where were the issues (I suspected that My device was constinuously switching btw 5GHz and 2.4GHz bandwiths)</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl status NetworkManager
<span class="nb">sudo </span>nano /etc/NetworkManager/NetworkManager.conf
</code></pre></div></div> <p>This showed me that my network interfaces weren’t properly managed by NetworkManager… Oops… So I set the value of <code class="language-plaintext highlighter-rouge">[ifupdown]</code> to <code class="language-plaintext highlighter-rouge">true</code>.</p> <p>Of course one <code class="language-plaintext highlighter-rouge">sudo systemctl restart NetworkManager</code>.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>paulb@debian:~<span class="nv">$ </span>nmcli device status
DEVICE        TYPE      STATE                   CONNECTION
wlo1          wifi      connected               mybox-<span class="k">****</span>
lo            loopback  connected <span class="o">(</span>externally<span class="o">)</span>  lo
docker0       bridge    connected <span class="o">(</span>externally<span class="o">)</span>  docker0
p2p-dev-wlo1  wifi-p2p  disconnected            <span class="nt">--</span>
</code></pre></div></div> <p>So it appeared that it wasn’t an issue about bandwiths but rather about IPv6…</p> <p>I just set <code class="language-plaintext highlighter-rouge">nmcli connection modify "mybox" ipv6.method "disabled"</code> the connection and it worked very fine !</p> <p>I just ran into <a href="https://www.dedoimedo.com/computers/linux-nm-ipv6-disable.html">this super website</a> that helped me a lot to understand what was under the hood.</p> <h2 id="useful-tips">USEFUL TIPS</h2> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>journalctl <span class="nt">-fu</span> NetworkManager <span class="c">#interactive view of the journal</span>
nmcli <span class="nt">-f</span> ALL device wifi show <span class="c">#shows wifi password and QRcode</span>
nmcli connection down <span class="s2">"mybox"</span>
nmcli connection up <span class="s2">"mybox"</span> <span class="c">#cli connection</span>
</code></pre></div></div> <h2 id="good-resource">GOOD RESOURCE</h2> <ul> <li><a href="https://www.dedoimedo.com/computers/linux-nm-ipv6-disable.html">dedoimedo article about ipv6</a></li> <li><a href="https://www.dedoimedo.com/greatest_sites.html">dedoimedo list of cool stuff</a></li> </ul>]]></content><author><name></name></author><category term="code"/><summary type="html"><![CDATA[Troubleshooting my wifi issues with NetworkManager]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://polpoxx6416.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with a notebook</title><link href="https://polpoxx6416.github.io/blog/2024/jupyter/" rel="alternate" type="text/html" title="a post with a notebook"/><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2024/jupyter</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2024/jupyter/"><![CDATA[<p>Hello ceci est un test avec un notebook</p> <p>voici le code à mettre dans le markdown pour render le notebook en html:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>shell
{::nomarkdown}



&lt;div
  class="jupyter-notebook"
  style="position: relative; width: 100%; margin: 0 auto;"&gt;
  &lt;div class="jupyter-notebook-iframe-container"&gt;
    &lt;iframe
      src="/assets/jupyter/blog.ipynb.html"
      style="position: absolute; top: 0; left: 0; border-style: none;"
      width="100%"
      height="100%"
      onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"&gt;&lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;


{:/nomarkdown}
</code></pre></div></div> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/blog.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[an example of a blog post with a notebook in it]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://polpoxx6416.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://polpoxx6416.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">a post with code</title><link href="https://polpoxx6416.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code"/><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2015/code</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in markdown code tags:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">c++
</span><span class="n">code</span> <span class="n">code</span> <span class="n">code</span>
<span class="p">```</span>
</code></pre></div></div> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p>For displaying code in a list item, you have to be aware of the indentation, as stated in this <a href="https://stackoverflow.com/questions/34987908/embed-a-code-block-in-a-list-item-with-proper-indentation-in-kramdown/38090598#38090598">Stackoverflow answer</a>. You must indent your code by <strong>(3 * bullet_indent_level)</strong> spaces. This is because kramdown (the markdown engine used by Jekyll) indentation for the code block in lists is determined by the column number of the first non-space character after the list item marker. For example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> We can put fenced code blocks inside nested bullets, too.
<span class="p">
   1.</span> Like this:<span class="sb">

      ```c
      printf("Hello, World!");
      ```

</span><span class="p">   2.</span> The key is to indent your fenced block in the same line as the first character of the line.
</code></pre></div></div> <p>Which displays:</p> <ol> <li> <p>We can put fenced code blocks inside nested bullets, too.</p> <ol> <li> <p>Like this:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">printf</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">);</span>
</code></pre></div> </div> </li> <li> <p>The key is to indent your fenced block in the same line as the first character of the line.</p> </li> </ol> </li> </ol> <p>By default, it does not display line numbers. If you want to display line numbers for every code block, you can set <code class="language-plaintext highlighter-rouge">kramdown.syntax_highlighter_opts.block.line_numbers</code> to true in your <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p> <p>hello</p> <p>If you want to display line numbers for a specific code block, all you have to do is wrap your code in a liquid tag:</p> <p>{% highlight c++ linenos %} <br/> code code code <br/> {% endhighlight %}</p> <p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers. Produces something like this:</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
<span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry><entry><title type="html">Odd-Even file partitionning using sed and awk</title><link href="https://polpoxx6416.github.io/blog/2015/odd-even-awk/" rel="alternate" type="text/html" title="Odd-Even file partitionning using sed and awk"/><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2015/odd-even-awk</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2015/odd-even-awk/"><![CDATA[<p>I had to run a simulation and because I was printing the internal state of my system and the observed state, I had to separate both in 2 files.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./simulation | <span class="nb">sed</span> <span class="s1">'1d;$d'</span> | <span class="nb">awk</span> <span class="s1">'NR%2==1 {print &gt; "odd_lines.txt"; next} {print &gt; "even_lines.txt"}'</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">sed '1d;$d'</code>: <ul> <li><code class="language-plaintext highlighter-rouge">1d</code> deletes the first line</li> <li><code class="language-plaintext highlighter-rouge">$d</code> deletes the last line</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">awk 'NR%2==1 {print &gt; "odd_lines.txt"; next} {print &gt; "even_lines.txt"}'</code>: <ul> <li><code class="language-plaintext highlighter-rouge">NR%2==1</code> current line number (Number of Record) mod 2</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="code"/><category term="command-line"/><summary type="html"><![CDATA[Useful command]]></summary></entry></feed>