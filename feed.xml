<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://polpoxx6416.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://polpoxx6416.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-20T12:12:28+00:00</updated><id>https://polpoxx6416.github.io/feed.xml</id><title type="html">blank</title><subtitle></subtitle><entry><title type="html">Azure Vm troubleshooting</title><link href="https://polpoxx6416.github.io/blog/2025/azure-vm-ssh/" rel="alternate" type="text/html" title="Azure Vm troubleshooting"/><published>2025-02-11T00:00:00+00:00</published><updated>2025-02-11T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/azure-vm-ssh</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/azure-vm-ssh/"><![CDATA[<p>Ok today I wanted to connect myself to my azure vm running debian bookworm but I have ssh hardened it following <a href="https://becomesovran.com/blog/server-setup-basics.html">this</a> very good tutorial. The issue is that I have a brand new computer and I’ve reset the previous one… And yes I have lost my ssh key to connect to my vm… Thus I have to find a way to add a new ssh public key so that I connect myself with my new computer.</p> <p>I have installed azure cli instead of using the webportal and now I have to execute a command inside the vm.</p> <p>Here is the magic command I went with :</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az vm run-command invoke <span class="nt">-g</span> myResourceGroup <span class="nt">-n</span> myVm <span class="nt">--command-id</span> RunShellScript <span class="nt">--scripts</span> <span class="nb">echo</span> <span class="s2">"pub-key"</span> <span class="o">&gt;&gt;</span> <span class="s1">'path/to/keys"
</span></code></pre></div></div> <p>It returns a JSON like this:</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"code"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ProvisioningState/succeeded"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"displayStatus"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Provisioning succeeded"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"level"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Info"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Enable succeeded: </span><span class="se">\n</span><span class="s2">[stdout]</span><span class="se">\n\n</span><span class="s2">[stderr]</span><span class="se">\n</span><span class="s2">ls: cannot access '.ssh/': No such file or directory</span><span class="se">\n</span><span class="s2">"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"time"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>and BOOM:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ____   ___  _     ___   ____ ____   __     ____  __
|  _ <span class="se">\ </span>/ _ <span class="se">\|</span> |   / _ <span class="se">\ </span>/ ___/ ___|  <span class="se">\ \ </span>  / /  <span class="se">\/</span>  |
| |_<span class="o">)</span> | | | | |  | | | | |   <span class="se">\_</span>__ <span class="se">\ </span>  <span class="se">\ \ </span>/ /| |<span class="se">\/</span>| |
|  __/| |_| | |__| |_| | |___ ___<span class="o">)</span> |   <span class="se">\ </span>V / | |  | |
|_|    <span class="se">\_</span>__/|_____<span class="se">\_</span>__/ <span class="se">\_</span>___|____/     <span class="se">\_</span>/  |_|  |_|

user@vm:~<span class="err">$</span>

</code></pre></div></div> <p>Now I just have to edit <code class="language-plaintext highlighter-rouge">.ssh/config</code> and add a new known host and the specifications such as <code class="language-plaintext highlighter-rouge">HostName</code>, <code class="language-plaintext highlighter-rouge">IdentityFile</code>, <code class="language-plaintext highlighter-rouge">Port</code>.</p> <p>NB: useful to parse json from command line with <code class="language-plaintext highlighter-rouge">| jq -r .name</code>.</p>]]></content><author><name></name></author><category term="code"/><summary type="html"><![CDATA[Installing azure cli and running commands inside vm]]></summary></entry><entry><title type="html">RL Overview</title><link href="https://polpoxx6416.github.io/blog/2025/rl-overview/" rel="alternate" type="text/html" title="RL Overview"/><published>2025-02-05T00:00:00+00:00</published><updated>2025-02-05T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/rl-overview</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/rl-overview/"><![CDATA[<p><a href="/assets/pdf/RL_overview.pdf">Here</a> you can find a great article that recaps the technics and libs used in RL. #state-of-the-art-baby.</p>]]></content><author><name></name></author><category term="ml"/><summary type="html"><![CDATA[Article from Kevin P. Murphy (1st on HN)]]></summary></entry><entry><title type="html">A first journey in the land of AI explainity</title><link href="https://polpoxx6416.github.io/blog/2025/explainability-ai/" rel="alternate" type="text/html" title="A first journey in the land of AI explainity"/><published>2025-02-01T00:00:00+00:00</published><updated>2025-02-01T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/explainability-ai</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/explainability-ai/"><![CDATA[<p>I’ve followed these two TPs as a part of a course in Centralesupelec. The first TP can be found <a href="https://git.frama-c.com/teaching/tutorial-ai-verification">here</a> and is about verifying deep neural networks while checking intervals and then with zoonotopes. The <a href="https://laiser.frama-c.com/laiser-websites/xai-ecai24/">second TP</a> goes deeper in techniques that tries to read informations from neural networks in a human way.</p> <p>I</p>]]></content><author><name></name></author><category term="ml"/><summary type="html"><![CDATA[TPs given at CentraleSupelec by two Researchers from CEA]]></summary></entry><entry><title type="html">Git Reminder</title><link href="https://polpoxx6416.github.io/blog/2025/git-reminder/" rel="alternate" type="text/html" title="Git Reminder"/><published>2025-02-01T00:00:00+00:00</published><updated>2025-02-01T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/git-reminder</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/git-reminder/"><![CDATA[<p><a href="https://beej.us/guide/bggit/html/split/index.html">One very good tutorial</a> to check and to grow. <a href="https://beej.us/guide/bggit/html/split/quick-reference.html#reverting">Quick reference</a></p> <ul> <li>To create a local branch and set remote tracking: <code class="language-plaintext highlighter-rouge">git switch -c &lt;branch&gt;</code> with <code class="language-plaintext highlighter-rouge">&lt;branch&gt;</code> being also a remote origin or it creates it</li> <li><code class="language-plaintext highlighter-rouge">git pull</code> makes in this order <code class="language-plaintext highlighter-rouge">git fetch</code> to fetch remotes changes and <code class="language-plaintext highlighter-rouge">git merge</code> to merge them in local branch so be careful =&gt; better to just fetch</li> <li>in case of destructing the project (test before merging to main especially in CI/CD context…) <code class="language-plaintext highlighter-rouge">git switch -c recovery-branch &lt;commit_hash&gt;</code> =&gt; creates the new branch (fail if branhc-name already exists, -C to overwrite)</li> <li><code class="language-plaintext highlighter-rouge">$ git switch --detach HEAD~3</code> to go to the commit (third previous)</li> <li>in case of failure of a <code class="language-plaintext highlighter-rouge">git switch main</code> <code class="language-plaintext highlighter-rouge">git merge &lt;branch-name&gt; #into main</code> =&gt; <ul> <li>fix conflicts and run <code class="language-plaintext highlighter-rouge">git commit</code>.</li> <li>Use <code class="language-plaintext highlighter-rouge">git merge --abort</code> to abort the merge.</li> </ul> </li> <li>oh.. forking is all about separating the push repo from the fetch repo</li> <li><code class="language-plaintext highlighter-rouge">git fetch --prune</code> to remove remote branches that have been deleted remotely</li> <li><code class="language-plaintext highlighter-rouge">git push origin --delete topic99</code> remote tracking branch on the repo</li> <li>Changing the git states of the files: <ul> <li>Untracked → <code class="language-plaintext highlighter-rouge">git add foo.txt</code> → Staged (as “new file”)</li> <li>Modified → <code class="language-plaintext highlighter-rouge">git add foo.txt</code> → Staged</li> <li>Modified → <code class="language-plaintext highlighter-rouge">git restore foo.txt</code> → Unmodified</li> <li>Unmodified → edit foo.txt → Modified (with your favorite editor)</li> <li>Staged → <code class="language-plaintext highlighter-rouge">git commit</code> → Unmodified</li> <li>Staged → <code class="language-plaintext highlighter-rouge">git restore --staged foo.txt</code> → Modified #allow to remove the file from the commit</li> </ul> </li> <li>Example to remove the file from the repo but keep it locally</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">ls
  </span>foo.txt
<span class="nv">$ </span>git <span class="nb">rm</span> <span class="nt">--cached</span> foo.txt
  <span class="nb">rm</span> <span class="s1">'foo.txt'</span>
<span class="nv">$ </span>git status
  On branch main
  Changes to be committed:
    <span class="o">(</span>use <span class="s2">"git restore --staged &lt;file&gt;..."</span> to unstage<span class="o">)</span>
      deleted:    foo.txt
  Untracked files:
    <span class="o">(</span>use <span class="s2">"git add &lt;file&gt;..."</span> to include <span class="k">in </span>what will be committed<span class="o">)</span>
      foo.txt
<span class="nv">$ </span><span class="nb">ls
  </span>foo.txt
</code></pre></div></div> <ul> <li>Multiple states at ones: check <a href="https://beej.us/guide/bggit/html/split/file-states.html#files-in-multiple-states">here</a></li> <li>To diff the staged version with the previous commit: <code class="language-plaintext highlighter-rouge">git diff --staged</code></li> <li>Reminder: A <code class="language-plaintext highlighter-rouge">git status</code> or <code class="language-plaintext highlighter-rouge">git diff</code> only shows files that differ between your working tree and the stage.</li> <li>ACHTUNG: git diff always compares the working tree to the stage.</li> <li>git diff can compare two branches: <code class="language-plaintext highlighter-rouge">$ git diff main topic</code></li> <li><code class="language-plaintext highlighter-rouge">git mv foo.txt bar.txt</code> to rename files (no more git rm, add…)</li> <li><code class="language-plaintext highlighter-rouge">git restore foo.txt</code> after a staged renaming with mv to restore and clean status (otherwise with <code class="language-plaintext highlighter-rouge">git restore --staged</code> makes a <code class="language-plaintext highlighter-rouge">git rm</code>)</li> <li>if restoring with a specific commit: <code class="language-plaintext highlighter-rouge">$ git restore --source=1c9bf foo.txt</code> be careful about adding it back and committing it !</li> <li>[typo] for typo</li> </ul>]]></content><author><name></name></author><category term="formatting"/><summary type="html"><![CDATA[A good git tutorial and some command that may be useful]]></summary></entry><entry><title type="html">Understanding Deep Learning</title><link href="https://polpoxx6416.github.io/blog/2025/understand-deep-learning/" rel="alternate" type="text/html" title="Understanding Deep Learning"/><published>2025-01-28T00:00:00+00:00</published><updated>2025-01-28T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/understand-deep-learning</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/understand-deep-learning/"><![CDATA[<p><a href="/assets/pdf/UnderstandingDeepLearning_11_21_24_C.pdf">Here</a> you can find a great book about Deep Learning and in the <a href="/repositories/">repositories section</a> you can find some tutorials associated with this book.</p>]]></content><author><name></name></author><category term="ml"/><summary type="html"><![CDATA[Book of Simon J. D. Prince about deep learning]]></summary></entry><entry><title type="html">Deepseek dimmensionning to run locally</title><link href="https://polpoxx6416.github.io/blog/2025/deepseek/" rel="alternate" type="text/html" title="Deepseek dimmensionning to run locally"/><published>2025-01-24T00:00:00+00:00</published><updated>2025-01-24T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/deepseek</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/deepseek/"><![CDATA[<h1 id="running-deepseek-locally">Running Deepseek locally</h1> <p><a href="https://apxml.com/posts/gpu-requirements-deepseek-r1">Here</a> you can find a tuto about dimensionning resources to run deepseek locally.</p>]]></content><author><name></name></author><category term="ml"/><summary type="html"><![CDATA[A quick guide about dimmensionning resources to run deepseek locally]]></summary></entry><entry><title type="html">Troobleshooting Wifi on Linux</title><link href="https://polpoxx6416.github.io/blog/2025/troubleshooting/" rel="alternate" type="text/html" title="Troobleshooting Wifi on Linux"/><published>2025-01-24T00:00:00+00:00</published><updated>2025-01-24T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2025/troubleshooting</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2025/troubleshooting/"><![CDATA[<h1 id="troobleshooting-wifi-on-linux">Troobleshooting Wifi on Linux</h1> <p>My system is a dual boot btw Debian and my network manager is NetworkManager.</p> <p>Here is a listof command I ran to understand where were the issues (I suspected that My device was constinuously switching btw 5GHz and 2.4GHz bandwiths)</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl status NetworkManager
<span class="nb">sudo </span>nano /etc/NetworkManager/NetworkManager.conf
</code></pre></div></div> <p>This showed me that my network interfaces weren’t properly managed by NetworkManager… Oops… So I set the value of <code class="language-plaintext highlighter-rouge">[ifupdown]</code> to <code class="language-plaintext highlighter-rouge">true</code>.</p> <p>Of course one <code class="language-plaintext highlighter-rouge">sudo systemctl restart NetworkManager</code>.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>paulb@debian:~<span class="nv">$ </span>nmcli device status
DEVICE        TYPE      STATE                   CONNECTION
wlo1          wifi      connected               mybox-<span class="k">****</span>
lo            loopback  connected <span class="o">(</span>externally<span class="o">)</span>  lo
docker0       bridge    connected <span class="o">(</span>externally<span class="o">)</span>  docker0
p2p-dev-wlo1  wifi-p2p  disconnected            <span class="nt">--</span>
</code></pre></div></div> <p>So it appeared that it wasn’t an issue about bandwiths but rather about IPv6…</p> <p>I just set <code class="language-plaintext highlighter-rouge">nmcli connection modify "mybox" ipv6.method "disabled"</code> the connection and it worked very fine !</p> <p>I just ran into <a href="https://www.dedoimedo.com/computers/linux-nm-ipv6-disable.html">this super website</a> that helped me a lot to understand what was under the hood.</p> <h2 id="useful-tips">USEFUL TIPS</h2> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>journalctl <span class="nt">-fu</span> NetworkManager <span class="c">#interactive view of the journal</span>
nmcli <span class="nt">-f</span> ALL device wifi show <span class="c">#shows wifi password and QRcode</span>
nmcli connection down <span class="s2">"mybox"</span>
nmcli connection up <span class="s2">"mybox"</span> <span class="c">#cli connection</span>
</code></pre></div></div> <h2 id="good-resource">GOOD RESOURCE</h2> <ul> <li><a href="https://www.dedoimedo.com/computers/linux-nm-ipv6-disable.html">dedoimedo article about ipv6</a></li> <li><a href="https://www.dedoimedo.com/greatest_sites.html">dedoimedo list of cool stuff</a></li> </ul>]]></content><author><name></name></author><category term="code"/><summary type="html"><![CDATA[Troubleshooting my wifi issues with NetworkManager]]></summary></entry><entry><title type="html">Nginx Explorer - Cookie Authentication</title><link href="https://polpoxx6416.github.io/blog/2024/nginx-explorer-cookie-authentication/" rel="alternate" type="text/html" title="Nginx Explorer - Cookie Authentication"/><published>2024-11-04T00:00:00+00:00</published><updated>2024-11-04T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2024/nginx-explorer---cookie-authentication</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2024/nginx-explorer-cookie-authentication/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Nginx Explorer - File listing</title><link href="https://polpoxx6416.github.io/blog/2024/nginx-explorer-file-listing/" rel="alternate" type="text/html" title="Nginx Explorer - File listing"/><published>2024-10-30T00:00:00+00:00</published><updated>2024-10-30T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2024/nginx-explorer---file-listing</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2024/nginx-explorer-file-listing/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Modern PATH environment variable</title><link href="https://polpoxx6416.github.io/blog/2024/modern-path-environment-variable/" rel="alternate" type="text/html" title="Modern PATH environment variable"/><published>2024-10-08T00:00:00+00:00</published><updated>2024-10-08T00:00:00+00:00</updated><id>https://polpoxx6416.github.io/blog/2024/modern-path-environment-variable</id><content type="html" xml:base="https://polpoxx6416.github.io/blog/2024/modern-path-environment-variable/"><![CDATA[]]></content><author><name></name></author></entry></feed>